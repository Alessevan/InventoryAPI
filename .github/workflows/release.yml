on:
  push:
    branches:
      - master

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8
          java-package: jdk
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        id: gradle_build
        run: ./gradlew clean build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_id }}
          release_name: ${{ github.event.head_commit.message }}
          body: |
            ${{ github.event.commit.message }}

            To integrate to gradle:

            ```gradle
            repositories {
              maven { url 'https://jitpack.io' }
            }

            dependencies {
              implementation group: 'com.github.BakaAless', name: 'InventoryAPI', version: '${{ github.run_id }}'
            }
            ```
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/libs/InventoryAPI.jar
          asset_name: InventoryAPI.jar
          asset_content_type: application/java-archive
